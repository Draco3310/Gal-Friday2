# Gal-Friday Configuration File

# Exchange API Settings (Credentials should ideally be environment variables or secrets)
# kraken:
#   api_key: YOUR_KRAKEN_API_KEY
#   secret_key: YOUR_KRAKEN_SECRET_KEY

exchange:
  name: kraken
  api_url: https://api.kraken.com
  request_timeout_seconds: 10
  # websocket_url: wss://ws.kraken.com/

# Trading Parameters
trading:
  pairs:
    - "XRP/USD"
    - "BTC/USD"
    - "ETH/USD"
  
  # Order execution settings
  order:
    default_order_type: "LIMIT"
    default_time_in_force: "GTC"
    limit_order_timeout_s: 300.0  # 5 minutes
    status_poll_interval_s: 5.0
    max_poll_duration_s: 3600.0  # 1 hour

# Portfolio Configuration
portfolio:
  valuation_currency: USD
  initial_capital:
    USD: 100000 # Example starting capital
  # initial_positions: # Example if starting with existing positions
  #   XRP/USD:
  #     quantity: 5000
  #     average_entry_price: 0.48

# Risk Management Settings
risk:
  limits:
    max_total_drawdown_pct: 10.0
    max_daily_drawdown_pct: 5.0
    max_weekly_drawdown_pct: 8.0
    max_position_size_pct: 20.0
    max_correlation_limit: 0.8
    
  # Position management
  position:
    min_position_value: 10.0
    max_leverage: 1.0
    enable_stop_loss: true
    enable_take_profit: true
    default_stop_loss_pct: 2.0
    default_take_profit_pct: 4.0
    
  # Cache and validation
  cache_expiry_seconds: 300
  min_symbol_parts: 2
  min_symbol_length_for_split: 3
  
  # Historical analysis
  volatility_lookback_days: 60
  min_data_points_for_stddev: 10

# Monitoring Service Settings
monitoring:
  check_interval_seconds: 60
  
  # API monitoring
  api_failure_threshold: 3
  api_error_threshold_count: 5
  api_error_threshold_period_s: 60.0
  
  # Data freshness monitoring
  data_staleness_threshold_s: 120.0
  
  # System resource monitoring
  cpu_threshold_pct: 90.0
  memory_threshold_pct: 90.0
  
  # Trading performance monitoring
  consecutive_loss_limit: 5
  
  # HALT behavior
  halt:
    position_behavior: "maintain"  # Options: "maintain", "close", "liquidate"

# Logging Configuration
logging:
  level: INFO # DEBUG, INFO, WARNING, ERROR, CRITICAL
  date_format: '%Y-%m-%d %H:%M:%S,%f' # Added milliseconds

  # Console Handler Settings
  console:
    enabled: true
    format: '%(asctime)s.%(msecs)03d - %(name)-20s - %(levelname)-8s - [%(context)s] - %(message)s'

  # JSON File Handler Settings
  json_file:
    enabled: true
    filename: logs/gal_friday_app.log.json
    max_bytes: 10485760 # 10MB
    backup_count: 5
    format: '%(asctime) %(name) %(levelname) %(message) %(context) %(exc_info)' # Fields for jsonlogger

  # PostgreSQL Database Handler Settings
  database:
    enabled: true
    # Recommended: Use environment variables for sensitive parts
    # Example DSN: postgresql://<user>:<password>@<host>:<port>/<database>
    connection_string: "postgresql://galfriday_user:YOUR_DB_PASSWORD@localhost:5432/galfriday_logs" # <-- IMPORTANT: CHANGE PASSWORD
    table_name: "logs" # Must match the schema definition (e.g., 001_create_logs_table.sql)
    min_pool_size: 1
    max_pool_size: 5

# Backtesting Engine Configuration
backtest:
  # Data source configuration
  data_path: "data/historical_data.csv"  # Primary data file path
  
  # Enterprise data loading configuration
  data_loading:
    # Performance and concurrency settings
    max_concurrent_loads: 5
    retry_attempts: 3
    retry_delay_base: 1.0
    retry_delay_multiplier: 2.0
    timeout_seconds: 30.0
    
    # Cache configuration
    cache_enabled: true
    memory_cache_size: 1000
    disk_cache_path: "./cache/backtest_data"
    
    # Data validation settings
    data_validation_enabled: true
    quality_threshold: 0.8
    allow_low_quality_data: false
    
    # Failure handling
    allow_partial_failures: false
    min_success_rate: 0.8
    
    # Data source configuration
    default_data_source: "auto"  # auto, local_files, database, api
    fallback_data_sources: ["local_files", "database"]
    enabled_providers: ["local_files", "database", "api"]
    
    # File source configuration
    file_sources:
      supported_formats: ["csv", "parquet", "json"]
      default_format: "csv"
    
    # Database source configuration  
    database_sources:
      query_timeout: 60.0
      connection_pool_size: 5
    
    # API source configuration
    api_sources:
      rate_limit_delay: 1.0
      api_timeout: 30.0
      max_requests_per_minute: 60
      
  # Legacy backtest configuration (maintained for compatibility)
  start_date: "2023-01-01"
  end_date: "2023-12-31"
  initial_capital: 10000.0
  commission_rate: 0.001
  slippage_rate: 0.0005

# Feature Engine Settings
feature_engine:
  enabled_features: ["rsi", "macd", "bbands", "atr"] # Example features
  rsi_period: 14
  macd_fast_period: 12
  macd_slow_period: 26
  macd_signal_period: 9
  bbands_period: 20
  bbands_std_dev: 2
  # atr_period: 14 # Can reuse from backtest section if desired, or define separately

# Prediction Service Settings
prediction_service:
  # Defines how predictions from multiple models (for the same target) are combined.
  # "none": Publish individual predictions for each model.
  # "average": Simple average of prediction values.
  # "weighted_average": Weighted average based on ensemble_weights.
  ensemble_strategy: "none" # Default to individual predictions
  ensemble_weights: {} # Example: {"xgb_v1_price_up": 0.7, "rf_v1_price_up": 0.3}

  models:
    - model_id: "xgb_v1_price_up"
      predictor_type: "xgboost"  # Maps to XGBoostPredictor
      model_path: "models/prod/xgb_v1_price_up.xgb"
      scaler_path: "models/prod/xgb_v1_price_up_scaler.pkl" # Optional
      model_feature_names: ["rsi_14", "macd_12_26_9_macdhist", "bbands_20_2.0_upperband_pct_dist"] # Example
      prediction_target: "prob_price_up_5min" # What this model predicts
      critical: true # If true, service won't start if this model fails to load

    - model_id: "rf_v1_price_up"
      predictor_type: "sklearn" # Maps to SKLearnPredictor
      model_path: "models/prod/rf_v1_price_up.joblib"
      scaler_path: "models/prod/rf_v1_price_up_scaler.pkl"
      # model_feature_names: ["alt_feat1", "alt_feat2"] # SKLearn can often get from model
      prediction_target: "prob_price_up_5min" # Same target, can be ensembled
      critical: false

    # Example LSTM model configuration
    - model_id: "lstm_seq_v1_price_up"
      predictor_type: "lstm"
      framework: "tensorflow" # Specify "tensorflow" or "pytorch"
      model_path: "models/prod/lstm_seq_v1_price_up.h5"
      scaler_path: "models/prod/lstm_seq_v1_price_up_scaler.pkl"
      model_feature_names: ["close_scaled", "volume_scaled", "rsi_14"] # Features per timestep
      sequence_length: 20 # LSTM expects a sequence of 20 past timesteps
      prediction_target: "prob_price_up_5min"
      critical: false
      # output_activation: "sigmoid" # Optional: hint for LSTMPredictor if needed for confidence calc

    # Example of a model predicting a different target
    # - model_id: "xgb_v2_volatility"
    #   predictor_type: "xgboost"
    #   model_path: "models/prod/xgb_v2_volatility.xgb"
    #   scaler_path: "models/prod/xgb_v2_volatility_scaler.pkl"
    #   model_feature_names: ["atr_14", "stdev_20"]
    #   prediction_target: "predicted_volatility_1min"
    #   critical: false

# Model Training Script Settings
training:
  labeling:
    target_horizon_minutes: 5 # How many minutes ahead to look for the label outcome
    target_threshold_pct: 0.1 # % price change defining a positive label (e.g., 0.1 = 0.1%)
  data:
    # Define the range of data to use for training (optional, could use all available)
    # start_date: "2022-01-01T00:00:00Z"
    # end_date: "2023-12-31T23:59:59Z"
    train_split_ratio: 0.8 # Proportion of data used for training (rest for testing)
    feature_list: ["rsi_14", "macd_12_26_9_macdhist", "bbands_20_2.0_upperband_pct_dist", "atr_14"] # Example feature names to use
  model:
    type: "xgboost" # Specify model type for a default training run, actual models used are per prediction_service config
    params: # Hyperparameters for XGBoost (example for a default training run)
      objective: 'binary:logistic'
      eval_metric: 'logloss'
      eta: 0.1 # learning_rate
      max_depth: 3
      subsample: 0.8
      colsample_bytree: 0.8
# Feature Engine Settings (Example)
# feature_engine:
#   rsi_period: 14
#   bbands_period: 20

# Prediction Service Settings (Example)
# prediction_service:
#   model_path: "models/xgboost_v1.joblib"
