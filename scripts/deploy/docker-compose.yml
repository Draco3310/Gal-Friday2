version: '3.8'

services:
  gal-friday:
    build:
      context: ../..
      dockerfile: scripts/deploy/Dockerfile
    container_name: gal-friday
    restart: unless-stopped
    environment:
      - GAL_FRIDAY_ENV=production
      - LOG_LEVEL=INFO
      - KRAKEN_API_KEY=${KRAKEN_API_KEY}
      - KRAKEN_API_SECRET=${KRAKEN_API_SECRET}
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - GAL_FRIDAY_MASTER_PASSWORD=${GAL_FRIDAY_MASTER_PASSWORD}
      - REDIS_URL=redis://redis:6379
      - POSTGRES_URL=postgresql://galfriday:${POSTGRES_PASSWORD}@postgres:5432/galfriday
    volumes:
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - ./data:/app/data
    ports:
      - "8000:8000"  # Dashboard API
      - "8080:8080"  # Health checks
    depends_on:
      - redis
      - postgres
      - influxdb
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/live"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - gal-friday-net

  redis:
    image: redis:7-alpine
    container_name: gal-friday-redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - gal-friday-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  postgres:
    image: postgres:15-alpine
    container_name: gal-friday-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_DB=galfriday
      - POSTGRES_USER=galfriday
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../../db/schema:/docker-entrypoint-initdb.d:ro
    ports:
      - "5432:5432"
    networks:
      - gal-friday-net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U galfriday"]
      interval: 10s
      timeout: 5s
      retries: 5

  influxdb:
    image: influxdb:2.7-alpine
    container_name: gal-friday-influxdb
    restart: unless-stopped
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=gal-friday
      - DOCKER_INFLUXDB_INIT_BUCKET=market-data
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - influxdb-config:/etc/influxdb2
    ports:
      - "8086:8086"
    networks:
      - gal-friday-net
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Monitoring Dashboard Frontend (optional)
  dashboard:
    image: nginx:alpine
    container_name: gal-friday-dashboard
    restart: unless-stopped
    volumes:
      - ./dashboard-build:/usr/share/nginx/html:ro
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "3000:80"
    depends_on:
      - gal-friday
    networks:
      - gal-friday-net

  # Prometheus for metrics collection (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: gal-friday-prometheus
    restart: unless-stopped
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - gal-friday-net

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: gal-friday-grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD}
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
      - influxdb
    networks:
      - gal-friday-net

volumes:
  redis-data:
  postgres-data:
  influxdb-data:
  influxdb-config:
  prometheus-data:
  grafana-data:

networks:
  gal-friday-net:
    driver: bridge 