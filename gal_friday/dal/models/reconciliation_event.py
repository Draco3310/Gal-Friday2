"""SQLAlchemy model for the 'reconciliation_events' table."""

from datetime import datetime
from decimal import Decimal

from sqlalchemy import DateTime, Index, Integer, Numeric, String
from sqlalchemy.dialects.postgresql import JSONB, UUID
from sqlalchemy.orm import Mapped, mapped_column, relationship
from sqlalchemy.sql import func

from .models_base import Base


class ReconciliationEvent(Base):
    """Represents a reconciliation event in the system."""

    __tablename__ = "reconciliation_events"

    # reconciliation_id is PRIMARY KEY but not auto-generated by DB in the schema (no DEFAULT uuid_generate_v4())
    # It's expected to be provided by the application.
    reconciliation_id: Mapped[UUID] = mapped_column(UUID(as_uuid=True), primary_key=True)
    timestamp: Mapped[datetime] = mapped_column(DateTime, nullable=False, index=True) # Added index based on schema
    reconciliation_type: Mapped[str] = mapped_column(String(50), nullable=False) # From 003
    status: Mapped[str] = mapped_column(String(50), nullable=False, index=True) # From 003, added index
    discrepancies_found: Mapped[int | None] = mapped_column(Integer, server_default="0")
    auto_corrected: Mapped[int | None] = mapped_column(Integer, server_default="0")
    manual_review_required: Mapped[int | None] = mapped_column(Integer, server_default="0")
    report: Mapped[dict] = mapped_column(JSONB, nullable=False) # From 003
    duration_seconds: Mapped[Decimal | None] = mapped_column(Numeric(10, 3), nullable=True) # Precision from 003
    created_at: Mapped[datetime | None] = mapped_column(
        DateTime, server_default=func.current_timestamp(),
    )

    # Relationship to PositionAdjustment
    adjustments = relationship("PositionAdjustment", back_populates="reconciliation_event")

    __table_args__ = (
        Index("idx_reconciliation_timestamp", "timestamp"),
        Index("idx_reconciliation_status", "status"),
    )

    def __repr__(self) -> str:
        return (
            f"<ReconciliationEvent(reconciliation_id={self.reconciliation_id}, "
            f"type='{self.reconciliation_type}', status='{self.status}')>"
        )
