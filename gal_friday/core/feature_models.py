"""Pydantic models for structured data interchange.

This module defines Pydantic models used for ensuring data contracts,
specifically for feature payloads published by the FeatureEngine and consumed
by downstream services like the PredictionService.
"""

from typing import Optional

from pydantic import BaseModel, Field


class PublishedFeaturesV1(BaseModel):
    """
    Represents the structure of features calculated by the FeatureEngine and published
    as part of a `FeatureEvent`. This model ensures that the features payload is
    validated and adheres to a defined data contract before being published.

    All feature values are expected to be numerical (floats). The field names
    must correspond to the final "flattened" feature keys as generated by
    `FeatureEngine._calculate_and_publish_features` (e.g., including suffixes
    for multi-column features like MACD lines or Bollinger Bands).

    If `FeatureEngine` calculates a feature that is not defined here, or if a value
    does not conform to the type (e.g., `float`), Pydantic will raise a validation
    error in `FeatureEngine`, preventing the publication of a malformed feature set.
    This model should be kept in sync with the features intended for publication,
    typically those defined and activated via the feature registry and application config.
    """

    # From rsi_14_default in sample registry
    rsi_14_default: float = Field(..., example=50.0)

    # From macd_default in sample registry
    # Assuming pandas_ta names MACD columns like: MACD_<fast>_<slow>_<signal>, MACDh..., MACDs...
    # The FeatureEngine's naming logic is base_feature_key + "_" + col_name
    macd_default_MACD_12_26_9: float = Field(..., example=0.5)
    macd_default_MACDh_12_26_9: float = Field(..., example=0.1)
    macd_default_MACDs_12_26_9: float = Field(..., example=0.4)

    # From l2_spread_basic in sample registry
    # _pipeline_compute_l2_spread outputs a DataFrame with "abs_spread" and "pct_spread"
    l2_spread_basic_abs_spread: float = Field(..., example=0.01)
    l2_spread_basic_pct_spread: float = Field(..., example=0.001)

    # From vwap_trades_60s in sample registry
    vwap_trades_60s: float = Field(..., example=30000.0)

    # Example of how an optional feature might be defined if needed in the future.
    # For now, all features defined in the sample registry are assumed to be produced
    # if activated, and thus are not Optional.
    # optional_feature_example: Optional[float] = Field(None, example=42.0)

    class Config:
        # Example for generating schema
        json_schema_extra = {
            "example": {
                "rsi_14_default": 55.0,
                "macd_default_MACD_12_26_9": -0.23,
                "macd_default_MACDh_12_26_9": -0.05,
                "macd_default_MACDs_12_26_9": -0.18,
                "l2_spread_basic_abs_spread": 0.02,
                "l2_spread_basic_pct_spread": 0.0005,
                "vwap_trades_60s": 30010.50,
            }
        }
